name: Production

on:
  push:
    tags:
      - v*

concurrency:
  group: production
  cancel-in-progress: true

jobs:
  deploy-production:
    name: Deploy production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://carnet-de-bord.fabrique.social.gouv.fr/
    strategy:
      matrix:
        service: ["app", "backend", "hasura"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Scalingo CLI
        uses: ./.github/actions/scalingo-cli

      - name: Deploy on Scalingo
        env:
          SCALINGO_REGION: ${{ secrets.SCALINGO_REGION }}
          SCALINGO_APP: cdb-${{ matrix.service }}${{ secrets.APP_SUFFIX }}
          SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_PRODUCTION_API_TOKEN }}
          GITHUB_REF: ${{ github.ref_name }}
          GITHUB_ARCHIVE_URL: ${{ github.server_url }}/${{ github.repository }}/tarball/${{ github.ref_name }}
        run:
          scalingo deploy ${GITHUB_ARCHIVE_URL} ${GITHUB_REF}

          #       - uses: actions/checkout@v3
          #         with:
          #           fetch-depth: 0
          #       - name: Find matching workflow
          #         uses: SamhammerAG/last-successful-build-action@a54c030db88e60c06a9e50c25418748afc623c20
          #         id: latest-deployment
          #         with:
          #           token: "${{ secrets.GITHUB_TOKEN }}"
          #           workflow: "Production"
          #           verify: true
          #       - name: Extract changelog content
          #         id: extract-changelog
          #         run: |
          #           CHANGELOG_CONTENT=$(cat << EOF
          #           $(git diff --output-indicator-new='*' ${{ steps.latest-deployment.outputs.sha }}...${{ github.sha }} CHANGELOG.md | egrep '^\*' | cut -c 2-)
          #           EOF
          #           )
          #           # replace new lines and carriage returns
          #           CHANGELOG_CONTENT="${CHANGELOG_CONTENT//'%'/'%25'}"
          #           CHANGELOG_CONTENT="${CHANGELOG_CONTENT//$'\n'/'%0A'}"
          #           CHANGELOG_CONTENT="${CHANGELOG_CONTENT//$'\r'/'%0D'}"
          #           echo "::set-output name=content::$CHANGELOG_CONTENT"
          #       - name: Create the deployment message
          #         run: |
          #           echo "{\"text\":\":tada: **${{ github.ref_name }} en production**\n${{ steps.extract-changelog.outputs.content }}\"}" > mattermost.json
          #       - name: Notify deployment on Mattermost
          #         uses: mattermost/action-mattermost-notify@master
          #         env:
          #           MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          #           MATTERMOST_CHANNEL: startup-carnetdebord-deploiements
